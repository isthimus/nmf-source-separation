=== next ===
spectInfo reckoning
fix up this file
shakedown getChroma_audio (apparently?)
bottom out hop sizes and chroma extraction
try and put the damn thing together...


=== spectInfo ===
spectinfo is actually 2 problems - gathering together the little bits of information, and making it so the functions intelligently 
pass fs, num_time_bins, etc around
	- the data gathering one is easy, high payoff and should be fixed at once. (ie just pass spectinfo into all thos partials rather than 999 individual args)
	- the data *flow* problem is more complicated. its in two parts - 
		A: propogating stuff that's known at the beginning of the sep_sources pipeline - fs/nfft/wlen etc
		B: propogating stuff that's worked out on the fly - num_time_bins etc
		neither of these are answered questions right now. 
		A does suggest a user convenience function with nice defaults which builds its own partials...
		B is thorny. could permissively allow functions to pass any info down the chain. or could go ad hoc with spect. or could have several pipelines.
		requiring no B-type dataflow is too restrcitive - the speedup from trimming spect alone justifies num_freq_bins propogating to nmf_func. 

=== getChroma_audio ===
X get audio
figure out how to take its fourier transform and get a spectInfo, etc (useful for later anyway even if its ad hoc now)
pass audio along with spect info to getChroma_audio
once satisfied, remove the assert that checks num_time_bins - now the spectInfo doesnt need spect() to have been called first

==== HASS, general framework code ============
- make sure youre passing "notes" around, not "midi" - mildy more efficient, much more flexible, and MATLAB does the pointer arithmetic :D
- stft_info struct!!
- proper tolerance functions
- code up sep_sources_aligned
- Reduce the amount of the spectrum we converge on for a big speedup 